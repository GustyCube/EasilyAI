[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "easilyai"
dynamic = ["version"]
description = "A unified Python library for AI services including OpenAI, Anthropic, Google Gemini, and Groq"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [{name = "GustyCube", email = "gc@gustycube.xyz"}]
maintainers = [{name = "GustyCube", email = "gc@gustycube.xyz"}]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "openai>=1.0.0",
    "requests>=2.25.0",
    "google-generativeai>=0.8.3",
    "anthropic>=0.42.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.11.0",
    "black>=23.7.0",
    "isort>=5.12.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "pre-commit>=3.3.0",
    "responses>=0.23.0",
    "types-requests>=2.31.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.2.0",
    "mkdocstrings[python]>=0.22.0",
    "mkdocs-autorefs>=0.5.0",
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.0",
    "pytest-asyncio>=0.21.0",
    "responses>=0.23.0",
    "python-dotenv>=1.0.0",
]
all = [
    "easilyai[dev,docs,test]",
]

[project.urls]
Homepage = "https://github.com/GustyCube/EasilyAI"
Documentation = "https://gustycube.github.io/EasilyAI/"
Repository = "https://github.com/GustyCube/EasilyAI"
Issues = "https://github.com/GustyCube/EasilyAI/issues"
Changelog = "https://github.com/GustyCube/EasilyAI/releases"

[tool.setuptools]
packages = ["easilyai"]
include-package-data = true

[tool.setuptools.package-data]
easilyai = ["py.typed"]

[tool.setuptools_scm]
write_to = "easilyai/_version.py"
version_scheme = "post-release"
local_scheme = "no-local-version"

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | easilyai/_version.py
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
split_on_trailing_comma = true
skip_glob = ["*/easilyai/_version.py"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_any_generics = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
show_error_codes = true
strict_equality = true
ignore_missing_imports = true
exclude = [
    "build/",
    "dist/",
    "easilyai/_version.py",
]

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
pythonpath = ["."]
addopts = [
    "--cov=easilyai",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "--strict-markers",
    "--strict-config",
    "--verbose",
]
markers = [
    "unit: Unit tests that don't require external services",
    "integration: Integration tests requiring API keys",
    "slow: Slow tests that should be run less frequently",
    "requires_api_key: Tests that require specific API keys",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

[tool.coverage.run]
source = ["easilyai"]
omit = [
    "*/tests/*",
    "*/_version.py",
    "*/test_*.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:",
    "@abstractmethod",
    "@abc.abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.ruff]
line-length = 100
target-version = "py38"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]
exclude = [
    ".git",
    ".ruff_cache",
    ".venv",
    "build",
    "dist",
    "easilyai/_version.py",
]